#include <mega16a.h>
#include <delay.h>
#include <stdio.h>
#include <stdint.h>

// Alphanumeric LCD functions
#include <alcd.h>

unsigned char flag = 0;
unsigned char s = 0, m = 0, h = 0;
unsigned char position = 0;
unsigned char sw0_previous_state = 0, sw1_previous_state = 0, sw2_previous_state = 0;

enum menu_type{
    display,
    set  
}state;

// Timer 2 overflow interrupt service routine (Internal Interrupt)
interrupt [TIM2_OVF] void isr_ovf_timer2(void)  //1ms
{              
    flag = 1;
}

void main(void)
{    
    char lcd_str[20] = {0};
        
    DDRC = 0x00;
    PORTC = 0x07;
    
    DDRD = 0xFF;  //LCD DIR
    PORTD = 0x00; //LCD PORT
    
    // Timer2, Normal Mode
    // Freq_ClockCrystal = 32.768 KHz, Prescaler = 128, Bottom = 0, Top = 255 
    // T_ovf = 1 s, Freq_ovf = 1 Hz
    ASSR = (1 << 3);    // Enabling Counter 2 (ClockCrystal, RTC)
    TCCR2 = 0x05;       // Prescaler = 128       
    TCNT2 = 0;          // Bottom = 0  
    OCR2 = 255;         // compare match and generate oc2
    TIMSK = (1 << 6);   // Enabling Timer 2 overflow interrupt
      
    // Global enable interrupts
    #asm("sei")
     
    // Alphanumeric LCD initialization
    // Connections are specified in the
    // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
    // RS - PORTD Bit 0
    // RD - PORTD Bit 1
    // EN - PORTD Bit 2
    // D4 - PORTD Bit 4
    // D5 - PORTD Bit 5
    // D6 - PORTD Bit 6
    // D7 - PORTD Bit 7
    // Characters/line: 16
    lcd_init(16);
    
    lcd_clear();
            
    while(1)
    {  
        sprintf(lcd_str, "%02d:%02d:%02d", h, m, s);
        lcd_gotoxy(0, 0);
        lcd_puts(lcd_str);
        
        switch(state)
        {
            case display: 
                if(((PINC >> 0) & 0x01) == 0x01)
                {  
                    sw0_previous_state = 1; 
                }   
                if(sw0_previous_state == 1 && ((PINC >> 0) & 0x01) == 0x00)
                {
                    delay_ms(200);
                    sw0_previous_state = 0; 
                    state = set;
                }
                
                if(flag == 1)
                {
                    flag = 0;
                    s++; 
                    if (s == 60)
                    {
                        s = 0;
                        m++;  
                        if (m == 60)
                        {
                            m = 0;
                            h++;
                            if (h == 24)
                            {
                                h = 0;
                            }
                        }    
                    }     
                }
            break;
                            
            case set:  
                lcd_gotoxy(position,1);
                lcd_putsf("--"); 
                
                if(((PINC >> 0) & 0x01) == 0x01)
                {  
                    sw0_previous_state = 1; 
                }   
                
                if(sw0_previous_state == 1 && ((PINC >> 0) & 0x01) == 0x00)
                {
                    delay_ms(200);
                    sw0_previous_state = 0; 
                    state = display;  
                    lcd_clear();
                }    
                
                if(((PINC >> 1) & 0x01) == 0x01)
                {  
                    sw1_previous_state = 1; 
                }   
                if(sw1_previous_state == 1 && ((PINC >> 1) & 0x01) == 0x00)
                {
                    delay_ms(200);
                    sw1_previous_state = 0; 
                    position += 3;
                    if(position == 9)
                        position = 0; 
                    lcd_clear();
                }
                
                if(((PINC >> 2) & 0x01) == 0x01)
                {  
                    sw2_previous_state = 1; 
                }
                if(sw2_previous_state == 1 && ((PINC >> 2) & 0x01) == 0x00)
                {
                    delay_ms(200);
                    sw2_previous_state = 0; 
                    if(position == 0)
                    {
                        h++;
                        if(h == 24)
                            h = 0;
                    } 
                    if(position == 3)
                    {
                        m++;
                        if(m == 60)
                            m = 0;
                    }   
                    if(position == 6)
                    {
                        s++;
                        if(s == 60)
                            s = 0;
                    }
                }               
            break;
        }
    }
}